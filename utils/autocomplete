# bash completion for appflow

# This function complete on available kernels
#
_containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

_vagrant-help()
{
	COMPREPLY=($(compgen -W "box connect destroy docker-exec docker-logs  \
			docker-run global-status halt help init list-commands \
			login package plugin provision push rdp reload resume \
			rsync rsync-auto share snapshot ssh ssh-config status \
			suspend up version"  -- ${cur} ))
}

_vagrant-vms()
{
	COMPREPLY=($(appflow vm box list | awk '{print $1}'))
}

_appflow()
{
	local cur prev command module i

	COMPREPLY=()
	cur=${COMP_WORDS[COMP_CWORD]}
	_get_comp_words_by_ref -n = cur prev
	COMPREPLY=( $( compgen -W "debug help update init provision \
			encrypt decrypt reset status checkin checkout jenkins local \
			ssh vagrant support install uninstall init-vm" -- ${cur} ) )
	prev=${COMP_WORDS[COMP_CWORD-1]}
	cur=${COMP_WORDS[COMP_CWORD]}
	command=${COMP_WORDS[1]}

	if [[ $prev == "vagrant" ]]; then
		_vagrant-help
		return 0;
	fi
	if [[ $prev == *"tags"* ]]; then
		COMPREPLY=( $(compgen -W "ansible apache2 apache2-conf apt apt-listchanges \
		apticron assh assh-conf autossh autossh-conf base_packages \
		borg borgmatic cloud clustercheck common composer env \
		environment etckeeper fstab geoip glusterfs golang grafana \
		groups haproxy haproxy-acl haproxy-conf hold hosts htaccess \
		htpasswd icinga icinga-conf icinga-conf-etc icinga-conf-hosts \
		icinga-ssh jenkins keepalived keepalived-conf lvm motd munin \
		munin-conf mysql mysql-conf mysql-users mysqlpass nodejs ntp \
		nullmailer percona php php-conf pkg rsyslog shell shell-users \
		smtpd ssh ssh-keys ssl ssl-conf sudo swap update users varnish \
		varnish-conf vhosts web_packages wp-cli xfs yum_proxy" ) )
		return 0;
	fi
	if [[ $prev == *"limit"* ]]; then
		_vagrant-vms
		return 0;
	fi 
	if [[ $prev == *"firstrun"* || $prev == *"local"* || $prev == *"verbose"* || $prev == *"ask-sudo-pass"* ]]; then
		COMPREPLY=( $(compgen -W "true false"))
		return 0;
	fi 
	
	
	
	match=$(echo "${COMP_WORDS[@]:0}" | grep -o "provision")  
	if [[ ! -z $match ]]  ; then
		COMPREPLY=($(compgen -W "tenant= vault= env= firstrun= local= limit= tags= skip_tags= verbose=" -- ${cur} ) )
		return 0;
	fi
	match=$(echo "${COMP_WORDS[@]:0}" | grep -o "local")  
	if [[ ! -z $match ]]  ; then
		COMPREPLY=($(compgen -W "ask-sudo-pass=" ) )
		return 0;
	fi
}

complete -o nospace -F _appflow appflow
